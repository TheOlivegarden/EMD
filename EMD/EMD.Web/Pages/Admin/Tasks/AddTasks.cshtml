@page
@using Microsoft.AspNetCore.Identity;
@model EMD.Web.Pages.Admin.Tasks.AddTasksModel
@inject SignInManager<IdentityUser> signInManager
@{
    ViewData["Title"] = "Add Tasks";
}

@if (signInManager.IsSignedIn(User))
{
    <div class="container">
        <h2 class="mt-4 mb-3">Add Tasks</h2>

        <div class="card">
            <div class="card-body">
                <form method="post">
                    <div class="form-group">
                        <label for="title" class="form-label">Title</label>
                        <input type="text" class="form-control" id="title" name="TaskViewModel.Title" required>
                    </div>
                    <div class="form-group">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="TaskViewModel.Description" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="deadline" class="form-label">Deadline</label>
                        <input type="date" class="form-control" id="deadline" name="TaskViewModel.Deadline" required>
                    </div>

                    <div class="form-group">
                        <label for="assignedEmployees" class="form-label">Assign to Employees</label>
                        <select asp-for="TaskViewModel.SelectedEmployeeIds" class="form-control" multiple>
                            @foreach (var employee in Model.AvailableEmployees)
                            {
                                <option value="@employee.Id">@employee.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Add Task</button>
                    </div>
                </form>
                @if (!string.IsNullOrEmpty(TempData["InvalidDate"] as string))
                {
                    <div class="toast-container position-fixed top-0 end-0 p-3">
                        <div class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
                            <div class="d-flex">
                                <div class="toast-body">
                                    <i class="bi bi-x-circle-fill me-2"></i>
                                    @TempData["InvalidDate"]
                                </div>
                                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>


}
else
{
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Log in to view the dashboard</h5>
                        <p>You need to log in to access the dashboard.</p>
                        <a class="btn btn-primary" href="/Login">Log In</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}